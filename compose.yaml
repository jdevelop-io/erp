services:
  web:
    build:
      context: .
      dockerfile: docker/symfony/Dockerfile
      target: dev
      args:
        PHP_VERSION: ${PHP_VERSION:-8.4}
    volumes:
      - ./:/var/www/html
    ports:
      - '80:80'
      - '443:443'
      - '443:443/udp'
    depends_on:
      - database

  console:
    build:
      context: .
      dockerfile: docker/symfony/Dockerfile
      target: dev
      args:
        PHP_VERSION: ${PHP_VERSION:-8.4}
    volumes:
      - ./:/var/www/html
    entrypoint: [ 'php', 'bin/console' ]
    profiles:
      - tools

  tests:
    build:
      context: .
      dockerfile: docker/symfony/Dockerfile
      target: dev
      args:
        PHP_VERSION: ${PHP_VERSION:-8.4}
    volumes:
      - ./:/var/www/html
    entrypoint: [ 'php', 'bin/phpunit' ]
    profiles:
      - tools

  ###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: [ 'CMD', 'pg_isready', '-d', '${POSTGRES_DB:-app}', '-U', '${POSTGRES_USER:-app}' ]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  ###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
